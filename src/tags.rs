pub fn tags() -> Vec<String> {
    return vec![
        "advanced_xml".to_string(),
        "alert_actions_conf".to_string(),
        "appapproval".to_string(),
        "cloud".to_string(),
        "custom_search_commands_v2".to_string(),
        "custom_search_commands".to_string(),
        "custom_visualizations".to_string(),
        "custom_workflow_actions".to_string(),
        "deprecated_feature".to_string(),
        "developer_guidance".to_string(),
        "django_bindings".to_string(),
        "future".to_string(),
        "inputs_conf".to_string(),
        "itsi".to_string(),
        "jquery".to_string(),
        "manual".to_string(),
        "markdown".to_string(),
        "malicious".to_string(),
        "modular_input".to_string(),
        "modular_inputs".to_string(),
        "offensive".to_string(),
        "packaging_standards".to_string(),
        "private_app".to_string(),
        "removed_feature".to_string(),
        "restmap_config".to_string(),
        "savedsearches".to_string(),
        "security".to_string(),
        "self-service".to_string(),
        "splunk_5_0".to_string(),
        "splunk_6_0".to_string(),
        "splunk_6_1".to_string(),
        "splunk_6_2".to_string(),
        "splunk_6_3".to_string(),
        "splunk_6_4".to_string(),
        "splunk_6_5".to_string(),
        "splunk_6_6".to_string(),
        "splunk_7_0".to_string(),
        "splunk_7_1".to_string(),
        "splunk_7_2".to_string(),
        "splunk_7_3".to_string(),
        "splunk_8_0".to_string(),
        "splunk_appinspect".to_string(),
        "web_conf".to_string()
    ]
}